# Use a Debian-based image instead of Alpine
FROM python:3.13-slim AS dev

WORKDIR /app
RUN apt-get -y update; apt-get -y install gnupg curl; apt-get -y install gpg
RUN curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey \
    | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
RUN curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list \
    | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' \
    | tee /etc/apt/sources.list.d/nvidia-container-toolkit.list

# Install dependencies for Flask hot reloading

RUN apt-get update && apt-get install -y \
    gcc-11 g++-11 make cmake libffi-dev inotify-tools \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get -y update && apt-get install -y nvidia-container-toolkit


# Set environment variables for development
ENV FLASK_APP=app.py
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1
ENV FLASK_RUN_EXTRA_FILES=/app
ENV PYTHONUNBUFFERED=1

# Install Python dependencies
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY . /app/

# Expose the development server port
EXPOSE 5555

# Run Flask in development mode with hot reloading
CMD ["flask", "run", "--host=0.0.0.0", "--port=5555", "--debug", "--reload"]
